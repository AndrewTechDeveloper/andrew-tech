{"version":3,"sources":["components/blogs/Card.tsx","components/blogs/Carousel.tsx","components/blogs/List.tsx","pages/blogs/index.tsx"],"names":["style","media","height","width","backgroundSize","deck","image","objectFit","ImageCard","ogImage","title","TrendDecksCard","data","history","gutterBottom","variant","component","slice","map","blog","key","id","src","og_image","alt","top","hover","waves","overlay","tag","small","muted","created_at","description","transparent","color","size","onClick","push","RecentDecksCard","latestOrderBlogs","sort","a","b","Date","getTime","RelatedDecksCard","nextBlog","filter","prevBlog","BlogsCarousel","item","css","activeItem","length","showControls","showIndicators","className","slide","index","type","itemId","AllList","Typography","List","ListItem","alignItems","button","ListItemAvatar","Avatar","ListItemText","primary","secondary","updated_at","Divider","mapDispatchToProps","setEditorState","blogsActions","setStatus","fetchAllRequest","BlogsIndexPage","React","componentDidMount","this","props","render","Container","maxWidth","Grid","container","direction","justify","xs","sm","dataSource","sourceType","screenName","options","username","theme","connect","blogs","editorState"],"mappings":"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","file":"static/js/11.acc63f3e.chunk.js","sourcesContent":["import React from 'react'\nimport { Blog } from 'store/blogs/types'\nimport { History } from 'history'\nimport Card from '@material-ui/core/Card'\nimport CardActionArea from '@material-ui/core/CardActionArea'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport { MDBCard, MDBCardTitle, MDBBtn, MDBCardGroup, MDBCardImage, MDBCardText, MDBCardBody, MDBCardFooter } from \"mdbreact\";\nimport Typography from '@material-ui/core/Typography'\n\ninterface DeckCardProps {\n  id: number\n  data: Blog[]\n  history: History\n}\ninterface ImageCardProps {\n  ogImage: string\n}\nconst style = {\n  media: {\n    height: '40vh',\n    width: 'auto',\n    backgroundSize: 'contain'\n  },\n  deck: {\n    image: {\n      height: '20vh',\n      objectFit: 'cover'\n    }\n  }\n}\n\nexport const ImageCard: React.FC<ImageCardProps> = ({ ogImage }) => (\n  <Card>\n    <CardActionArea>\n      <CardMedia image={ogImage || 'image'} title=\"blog image\" style={style.media} />\n    </CardActionArea>\n  </Card>\n)\n\nexport const TrendDecksCard: React.FC<DeckCardProps> = ({ data, history }) => {\n  return (\n    <div>\n      <Typography gutterBottom variant=\"h5\" component=\"h2\">\n        人気の記事\n      </Typography>\n      <MDBCardGroup deck>\n        {data.slice(0, 3).map(blog => (\n          <MDBCard key={blog.id}>\n            <MDBCardImage src={blog.og_image} alt=\"MDBCard image cap\" top hover waves overlay=\"white-slight\" style={style.deck.image} />\n            <MDBCardBody>\n              <MDBCardTitle tag=\"h5\">{blog.title}</MDBCardTitle>\n              <MDBCardText small muted>\n                {blog.created_at}\n              </MDBCardText>\n              <MDBCardText>\n                {blog.description}\n              </MDBCardText>\n            </MDBCardBody>\n            <MDBCardFooter small transparent>\n              <MDBBtn color=\"primary\" size=\"sm\" onClick={() => history.push(`blogs/${blog.id}`)}>\n                記事を読む\n              </MDBBtn>\n            </MDBCardFooter>\n          </MDBCard>\n        ))}\n      </MDBCardGroup>\n    </div>\n  )\n}\n\nexport const RecentDecksCard: React.FC<DeckCardProps> = ({ data, history }) => {\n  const latestOrderBlogs = data.sort((a,b) => {\n    return new Date(b.created_at).getTime() - new Date(a.created_at).getTime();\n  });\n  return (\n    <div>\n      <Typography gutterBottom variant=\"h5\" component=\"h2\">\n        最近の記事\n      </Typography>\n      <MDBCardGroup deck>\n        {latestOrderBlogs.slice(0, 3).map(blog => (\n          <MDBCard key={blog.id}>\n            <MDBCardImage src={blog.og_image} alt=\"MDBCard image cap\" top hover waves overlay=\"white-slight\" style={style.deck.image} />\n            <MDBCardBody>\n              <MDBCardTitle tag=\"h5\">{blog.title}</MDBCardTitle>\n              <MDBCardText small muted>\n                {blog.created_at}\n              </MDBCardText>\n              <MDBCardText>\n                {blog.description}\n              </MDBCardText>\n            </MDBCardBody>\n            <MDBCardFooter small transparent>\n              <MDBBtn color=\"primary\" size=\"sm\" onClick={() => history.push(`/blogs/${blog.id}`)}>\n                記事を読む\n              </MDBBtn>\n            </MDBCardFooter>\n          </MDBCard>\n        ))}\n      </MDBCardGroup>\n    </div>\n  )\n}\n\nexport const RelatedDecksCard: React.FC<DeckCardProps> = ({ id, data, history }) => {\n  const nextBlog = data.filter(blog => blog.id === id + 1)[0]\n  const prevBlog = data.filter(blog => blog.id === id - 1)[0]\n  return (\n    <div>\n      <Typography gutterBottom variant=\"h5\" component=\"h2\">\n        関連の記事\n      </Typography>\n      <MDBCardGroup deck>\n        {prevBlog &&\n          <MDBCard>\n            <MDBCardImage src={prevBlog.og_image} alt=\"MDBCard image cap\" top hover waves overlay=\"white-slight\" style={style.deck.image} />\n            <MDBCardBody>\n              <MDBCardTitle tag=\"h5\">{prevBlog.title}</MDBCardTitle>\n              <MDBCardText small muted>\n                {prevBlog.created_at}\n              </MDBCardText>\n              <MDBCardText>\n                {prevBlog.description}\n              </MDBCardText>\n            </MDBCardBody>\n            <MDBCardFooter small transparent>\n              <MDBBtn color=\"primary\" size=\"sm\" onClick={() => history.push(`/blogs/${prevBlog.id}`)}>\n                前の記事を読む\n              </MDBBtn>\n            </MDBCardFooter>\n          </MDBCard>\n        }\n        {nextBlog &&\n          <MDBCard>\n            <MDBCardImage src={nextBlog.og_image} alt=\"MDBCard image cap\" top hover waves overlay=\"white-slight\" style={style.deck.image} />\n            <MDBCardBody>\n              <MDBCardTitle tag=\"h5\">{nextBlog.title}</MDBCardTitle>\n              <MDBCardText small muted>\n                {nextBlog.created_at}\n              </MDBCardText>\n              <MDBCardText>\n                {nextBlog.description}\n              </MDBCardText>\n            </MDBCardBody>\n            <MDBCardFooter small transparent>\n              <MDBBtn color=\"primary\" size=\"sm\" onClick={() => history.push(`/blogs/${nextBlog.id}`)}>\n                次の記事を読む\n              </MDBBtn>\n            </MDBCardFooter>\n          </MDBCard>\n        }\n      </MDBCardGroup>\n    </div>\n  )\n}\n","import React from 'react'\nimport { css, jsx } from '@emotion/core'\nimport { History } from 'history'\nimport { Blog } from 'store/blogs/types'\nimport { MDBCarousel, MDBCarouselCaption, MDBCarouselInner, MDBCarouselItem, MDBView, MDBMask } from 'mdbreact'\n\ninterface BlogsCarouselProps {\n  data: Blog[]\n  history: History\n}\ninterface RelatedBlogsCarouselProps {\n  data: Blog[]\n  history: History\n}\n\nexport const BlogsCarousel: React.FC<BlogsCarouselProps> = ({ data, history }) => {\n  /** @jsx jsx */\n  const item = css`\n    height: 68vh;\n    @media (max-width: 960px) {\n      height: 40vh;\n    }\n  `\n  const image = css`\n    min-height: 68vh;\n    object-fit: cover;\n    @media (max-width: 960px) {\n      min-height: 40vh;\n    }\n  `\n  return (\n    <MDBCarousel\n      activeItem={1}\n      css={item}\n      length={5}\n      showControls={true}\n      showIndicators={true}\n      className=\"z-depth-1\"\n      slide\n    >\n      <MDBCarouselInner>\n        {data.map((blog, index) => (\n          <MDBCarouselItem type=\"button\" itemId={index + 1} key={index + 1} onClick={() => history.push(`blogs/${blog.id}`)}>\n            <MDBView>\n              <img alt=\"carousel\" className=\"d-block m-auto\" src={blog.og_image} css={image} />\n              <MDBMask overlay=\"black-strong\" />\n            </MDBView>\n            <MDBCarouselCaption>\n              <h1 className=\"h3-responsive\">{blog.title}</h1>\n              <p>{blog.description}</p>\n            </MDBCarouselCaption>\n          </MDBCarouselItem>\n        ))}\n      </MDBCarouselInner>\n    </MDBCarousel>\n  )\n}\n","import React from 'react'\nimport { Blog } from 'store/blogs/types'\nimport { History } from 'history'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport Divider from '@material-ui/core/Divider'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\nimport Avatar from '@material-ui/core/Avatar'\nimport Typography from '@material-ui/core/Typography'\n\ninterface AllListProps {\n  data: Blog[]\n  history: History\n}\n\nexport const AllList: React.FC<AllListProps> = ({ data, history }) => (\n  <>\n    <Typography variant=\"h5\" component=\"h2\">\n      記事一覧\n    </Typography>\n    <List>\n      {data.map(blog => (\n          <div key={blog.id}>\n            <ListItem alignItems=\"flex-start\" button onClick={() => history.push(`blogs/${blog.id}`)}>\n              <ListItemAvatar>\n                <Avatar src={blog.og_image} />\n              </ListItemAvatar>\n              <ListItemText\n                primary={blog.title}\n                secondary={\n                  <Typography component=\"span\" variant=\"caption\" color=\"textSecondary\">\n                    {blog.updated_at}\n                  </Typography>\n                }\n              />\n            </ListItem>\n            <Divider variant=\"inset\" component=\"li\" />\n          </div>\n        ))}\n    </List>\n  </>\n)\n","import * as React from 'react'\nimport { History } from 'history'\nimport { EditorState } from 'draft-js'\nimport { AppState } from 'store'\nimport { connect } from 'react-redux'\nimport * as blogsActions from 'store/blogs/actions'\nimport { Blog } from 'store/blogs/types'\nimport { BlogsCarousel } from 'components/blogs/Carousel'\nimport { AllList } from 'components/blogs/List'\nimport { TrendDecksCard, RecentDecksCard } from 'components/blogs/Card'\nimport { Timeline } from 'react-twitter-widgets'\nimport Container from '@material-ui/core/Container'\nimport Grid from '@material-ui/core/Grid'\n\ninterface PropsFromState {\n  id: number\n  editorState: EditorState\n  data: Blog[]\n  history: History\n}\ninterface PropsFromDispatch {\n  setEditorState: typeof blogsActions.setEditorState\n  setStatus: typeof blogsActions.setStatus\n  fetchAllRequest: typeof blogsActions.fetchAllRequest\n}\ntype AllProps = PropsFromState & PropsFromDispatch\n\nconst mapStateToProps = ({ blogs }: AppState) => ({\n  id: blogs.id,\n  editorState: blogs.editorState,\n  data: blogs.data\n})\nconst mapDispatchToProps = {\n  setEditorState: blogsActions.setEditorState,\n  setStatus: blogsActions.setStatus,\n  fetchAllRequest: blogsActions.fetchAllRequest\n}\n\nclass BlogsIndexPage extends React.Component<AllProps> {\n  componentDidMount() {\n    this.props.setStatus('publish')\n    this.props.fetchAllRequest()\n  }\n  render() {\n    return (\n      <>\n        <BlogsCarousel {...this.props} />\n        <Container maxWidth=\"lg\" className=\"my-5\">\n          <Grid container direction=\"row\" justify=\"space-between\">\n            <Grid item xs={12} sm={8} className=\"mb-2\">\n              <div className=\"mb-5\">\n                <TrendDecksCard {...this.props} />\n              </div>\n              <div className=\"mb-5\">\n                <RecentDecksCard {...this.props} />\n              </div>\n              <div className=\"mb-5\">\n                <AllList {...this.props} />\n              </div>\n            </Grid>\n            <Grid item xs={12} sm={3} className=\"mb-2\">\n              <Timeline\n                dataSource={{ sourceType: 'profile', screenName: 'andrewdayoooo' }}\n                options={{ username: 'andrewdayoooo', height: '400', theme: 'dark' }}\n              />\n            </Grid>\n          </Grid>\n        </Container>\n      </>\n    )\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BlogsIndexPage)\n"],"sourceRoot":""}