{"version":3,"sources":["components/layouts/Helmet.tsx","pages/blogs/show.tsx"],"names":["HeadHelmet","title","description","ogImage","Helmet","meta","name","content","property","window","location","href","mapDispatchToProps","setEditorState","blogsActions","fetchRequest","BlogsShowPage","React","componentDidMount","this","props","render","editorState","createdAt","Container","maxWidth","className","Avatar","alt","src","style","width","height","Typography","variant","color","gutterBottom","Divider","onEditorStateChange","readOnly","toolbarHidden","connect","blogs"],"mappings":"gLASO,MAAMA,EAAoC,EAAGC,QAAOC,cAAaC,aACtE,kBAACC,EAAA,EAAD,CACEH,MAAM,OACNI,KAAM,CACJ,CAAEC,KAAM,eAAgBC,QAAS,uBACjC,CAAED,KAAM,eAAgBC,QAAS,kBACjC,CAAEC,SAAU,WAAYD,QAAQ,GAAD,OAAKN,IACpC,CAAEO,SAAU,UAAWD,QAAS,WAChC,CAAEC,SAAU,SAAUD,QAAQ,GAAD,OAAKE,OAAOC,SAASC,OAClD,CAAEH,SAAU,WAAYD,QAAQ,GAAD,OAAKJ,IACpC,CAAEK,SAAU,iBAAkBD,QAAQ,GAAD,OAAKL,O,uCCOhD,MAOMU,EAAqB,CACzBC,eAAgBC,IAChBC,aAAcD,KAGhB,MAAME,UAAsBC,YAC1BC,oBACEC,KAAKC,MAAML,eAEbM,SACE,MAMM,YAAEC,EAAF,MAAerB,EAAf,YAAsBC,EAAtB,QAAmCC,EAAnC,UAA4CoB,EAA5C,eAAuDV,GAAmBM,KAAKC,MACrF,OACE,gCACE,gBAACpB,EAAemB,KAAKC,OACrB,gBAACI,EAAA,EAAD,CAAWC,SAAS,KAAKC,UAAU,wBACjC,uBAAKA,UAAU,6BACb,gBAACC,EAAA,EAAD,CAAQC,IAAI,WAAWC,IAAK1B,EAASuB,UAAU,OAAOI,MAXrD,CACLC,MAAO,OACPC,OAAQ,UAUJ,2BACE,gBAACC,EAAA,EAAD,CAAYC,QAAQ,MACjBjC,GAEH,gBAACgC,EAAA,EAAD,CAAYC,QAAQ,YAAYC,MAAM,gBAAgBC,cAAY,GAC/Db,KAIP,gBAACU,EAAA,EAAD,CAAYC,QAAQ,YAAYE,cAAY,EAACV,UAAU,QACpDxB,GAEH,gBAACmC,EAAA,EAAD,CAASX,UAAU,SACnB,gBAAC,SAAD,CAAQJ,YAAaA,EAAagB,oBAAqBzB,EAAgB0B,UAAQ,EAACC,eAAa,OAOxFC,sBAlDS,EAAGC,YAAH,CACtBpB,YAAaoB,EAAMpB,YACnBrB,MAAOyC,EAAMzC,MACbC,YAAawC,EAAMxC,YACnBC,QAASuC,EAAMvC,QACfoB,UAAWmB,EAAMnB,YA6CqBX,EAAzB6B,CAA6CzB","file":"static/js/13.37c792a9.chunk.js","sourcesContent":["import React from 'react'\nimport { Helmet } from 'react-helmet'\n\ninterface HelmetProps {\n  title: string\n  description: string\n  ogImage: string\n}\n\nexport const HeadHelmet: React.FC<HelmetProps> = ({ title, description, ogImage }) => (\n  <Helmet\n    title=\"Home\"\n    meta={[\n      { name: 'twitter:card', content: 'summary_large_image' },\n      { name: 'twitter:site', content: '@andrewdayoooo' },\n      { property: 'og:title', content: `${title}` },\n      { property: 'og:type', content: 'website' },\n      { property: 'og:url', content: `${window.location.href}` },\n      { property: 'og:image', content: `${ogImage}` },\n      { property: 'og:description', content: `${description}` }\n    ]}\n  />\n)\n","import * as React from 'react'\nimport { EditorState } from 'draft-js'\nimport { AppState } from 'store'\nimport { connect } from 'react-redux'\nimport * as blogsActions from 'store/blogs/actions'\nimport { Editor } from 'react-draft-wysiwyg'\nimport { ImageCard } from 'components/blogs/Card'\nimport { HeadHelmet } from 'components/layouts/Helmet'\nimport Container from '@material-ui/core/Container'\nimport Typography from '@material-ui/core/Typography'\nimport Divider from '@material-ui/core/Divider'\nimport Avatar from '@material-ui/core/Avatar';\n\ninterface PropsFromState {\n  editorState: EditorState\n  title: string\n  description: string\n  ogImage: string\n  createdAt: string\n}\ninterface PropsFromDispatch {\n  setEditorState: typeof blogsActions.setEditorState\n  fetchRequest: typeof blogsActions.fetchRequest\n}\ntype AllProps = PropsFromState & PropsFromDispatch\n\nconst mapStateToProps = ({ blogs }: AppState) => ({\n  editorState: blogs.editorState,\n  title: blogs.title,\n  description: blogs.description,\n  ogImage: blogs.ogImage,\n  createdAt: blogs.createdAt\n})\nconst mapDispatchToProps = {\n  setEditorState: blogsActions.setEditorState,\n  fetchRequest: blogsActions.fetchRequest\n}\n\nclass BlogsShowPage extends React.Component<AllProps> {\n  componentDidMount() {\n    this.props.fetchRequest()\n  }\n  render() {\n    const style = {\n      image: {\n        width: '60px',\n        height: '60px'\n      }\n    }\n    const { editorState, title, description, ogImage, createdAt, setEditorState } = this.props\n    return (\n      <>\n        <HeadHelmet {...this.props} />\n        <Container maxWidth=\"md\" className=\"my-5 blog min-vh-100\">\n          <div className='d-flex align-items-center'>\n            <Avatar alt=\"og image\" src={ogImage} className='mr-4' style={style.image} />\n            <div>\n              <Typography variant=\"h5\">\n                {title}\n              </Typography>\n              <Typography variant=\"subtitle1\" color=\"textSecondary\" gutterBottom>\n                {createdAt}\n              </Typography>\n            </div>\n          </div>\n          <Typography variant=\"subtitle1\" gutterBottom className='mt-4'>\n            {description}\n          </Typography>\n          <Divider className=\"my-4\" />\n          <Editor editorState={editorState} onEditorStateChange={setEditorState} readOnly toolbarHidden />\n        </Container>\n      </>\n    )\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BlogsShowPage)\n"],"sourceRoot":""}