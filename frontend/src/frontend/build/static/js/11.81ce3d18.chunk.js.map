{"version":3,"sources":["components/blogs/Carousel.tsx","components/blogs/List.tsx","pages/blogs/index.tsx"],"names":["CarouselTitle","data","history","activeItem","length","showControls","showIndicators","map","blog","type","itemId","key","id","onClick","push","alt","className","src","og_image","overlay","title","description","TrendList","Typography","variant","List","ListItem","alignItems","button","ListItemAvatar","Avatar","ListItemText","primary","secondary","component","color","updated_at","Divider","RecentList","mapDispatchToProps","setEditorState","blogsActions","setStatus","fetchAllRequest","BlogsIndexPage","React","componentDidMount","this","props","render","Container","maxWidth","Grid","container","direction","justify","item","xs","sm","dataSource","sourceType","screenName","options","username","height","theme","connect","blogs","editorState"],"mappings":"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","file":"static/js/11.81ce3d18.chunk.js","sourcesContent":["import React from 'react'\n/** @jsx jsx */ import { jsx, css } from '@emotion/core'\nimport { History } from 'history'\nimport { Blog } from 'store/blogs/types'\nimport { MDBCarousel, MDBCarouselCaption, MDBCarouselInner, MDBCarouselItem, MDBView, MDBMask, MDBContainer } from 'mdbreact'\n\ninterface CarouselProps {\n  data: Blog[]\n  history: History\n}\n\nexport const CarouselTitle: React.FC<CarouselProps> = ({ data, history }) => {\n  return (\n    <MDBCarousel activeItem={1} length={data && data.length} showControls={true} showIndicators={true}>\n      <MDBCarouselInner>\n        {data && data.map(blog => (\n          <MDBCarouselItem type=\"button\" itemId=\"1\" key={blog.id} onClick={() => history.push(`blogs/${blog.id}`)}>\n            <MDBView>\n              <img alt='carousel' className=\"d-block m-auto\" src={blog.og_image} />\n              <MDBMask overlay=\"black-strong\" />\n            </MDBView>\n            <MDBCarouselCaption>\n              <h3 className=\"h3-responsive\">{blog.title}</h3>\n              <p>{blog.description}</p>\n            </MDBCarouselCaption>\n          </MDBCarouselItem>\n        ))}\n      </MDBCarouselInner>\n    </MDBCarousel>\n  )\n}\n\n","import React from 'react'\nimport { Blog } from 'store/blogs/types'\nimport { History } from 'history'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport Divider from '@material-ui/core/Divider'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\nimport Avatar from '@material-ui/core/Avatar'\nimport Typography from '@material-ui/core/Typography'\n\ninterface TrendListProps {\n  data: Blog[]\n  history: History\n}\ninterface RecentListProps {\n  data: Blog[]\n  history: History\n}\n\nexport const TrendList: React.FC<TrendListProps> = ({ data, history }) => (\n  <>\n    <Typography variant=\"h5\">人気の記事</Typography>\n    <List>\n      {data && data.map(blog => (\n        <div key={blog.id}>\n          <ListItem alignItems=\"flex-start\" button onClick={() => history.push(`blogs/${blog.id}`)}>\n            <ListItemAvatar>\n              <Avatar src={blog.og_image} />\n            </ListItemAvatar>\n            <ListItemText\n              primary={blog.title}\n              secondary={\n                <Typography component=\"span\" variant=\"caption\" color=\"textSecondary\">\n                  {blog.updated_at}\n                </Typography>\n              }\n            />\n          </ListItem>\n          <Divider variant=\"inset\" component=\"li\" />\n        </div>\n      ))}\n    </List>\n  </>\n)\n\nexport const RecentList: React.FC<RecentListProps> = ({ data, history }) => (\n  <>\n    <Typography variant=\"h5\">最新の記事</Typography>\n    <List>\n      {data && data.map(blog => (\n        <div key={blog.id}>\n          <ListItem alignItems=\"flex-start\" button onClick={() => history.push(`blogs/${blog.id}`)}>\n            <ListItemAvatar>\n              <Avatar src={blog.og_image} />\n            </ListItemAvatar>\n            <ListItemText\n              primary={blog.title}\n              secondary={\n                <Typography component=\"span\" variant=\"caption\" color=\"textSecondary\">\n                  {blog.updated_at}\n                </Typography>\n              }\n            />\n          </ListItem>\n          <Divider variant=\"inset\" component=\"li\" />\n        </div>\n      ))}\n    </List>\n  </>\n)\n","import * as React from 'react'\nimport { History } from 'history'\nimport { EditorState } from 'draft-js'\nimport { AppState } from 'store'\nimport { connect } from 'react-redux'\nimport * as blogsActions from 'store/blogs/actions'\nimport { Blog } from 'store/blogs/types'\nimport { CarouselTitle } from 'components/blogs/Carousel'\nimport { TrendList, RecentList } from 'components/blogs/List'\nimport { Timeline } from 'react-twitter-widgets'\nimport Container from '@material-ui/core/Container'\nimport Grid from '@material-ui/core/Grid'\n\ninterface PropsFromState {\n  editorState: EditorState\n  data: Blog[]\n  history: History\n}\ninterface PropsFromDispatch {\n  setEditorState: typeof blogsActions.setEditorState\n  setStatus: typeof blogsActions.setStatus\n  fetchAllRequest: typeof blogsActions.fetchAllRequest\n}\ntype AllProps = PropsFromState & PropsFromDispatch\n\nconst mapStateToProps = ({ blogs }: AppState) => ({\n  editorState: blogs.editorState,\n  data: blogs.data\n})\nconst mapDispatchToProps = {\n  setEditorState: blogsActions.setEditorState,\n  setStatus: blogsActions.setStatus,\n  fetchAllRequest: blogsActions.fetchAllRequest\n}\n\nclass BlogsIndexPage extends React.Component<AllProps> {\n  componentDidMount() {\n    this.props.setStatus('publish')\n    this.props.fetchAllRequest()\n  }\n  render() {\n    return (\n      <>\n        <CarouselTitle {...this.props} />\n        <Container maxWidth=\"md\" className=\"my-5\">\n          <Grid container direction=\"row\" justify=\"space-between\">\n            <Grid item xs={12} sm={8} className=\"mb-2\">\n              <div className=\"mb-5\">\n                <TrendList {...this.props} />\n              </div>\n              <div className=\"mb-5\">\n                <RecentList {...this.props} />\n              </div>\n            </Grid>\n            <Grid item xs={12} sm={3} className=\"mb-2\">\n              <Timeline\n                dataSource={{ sourceType: 'profile', screenName: 'andrewdayoooo' }}\n                options={{ username: 'andrewdayoooo', height: '400', theme: 'dark' }}\n              />\n            </Grid>\n          </Grid>\n        </Container>\n      </>\n    )\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BlogsIndexPage)\n"],"sourceRoot":""}