{"version":3,"sources":["components/blogs/Form.tsx","components/blogs/Button.tsx","components/layouts/Toast.tsx","components/blogs/Card.tsx","pages/blogs/new.tsx"],"names":["BlogsSelect","id","data","setId","FormControl","style","minWidth","InputLabel","Select","labelId","value","onChange","e","target","MenuItem","key","map","blog","title","StatusSelect","status","setStatus","option","TitleForm","setTitle","TextField","label","DescriptionForm","description","setDescription","OgImageForm","ogImage","setOgImage","FetchButton","fetchRequest","Button","variant","color","onClick","SaveButton","saveRequest","Toast","toast","Snackbar","open","isOpen","autoHideDuration","anchorOrigin","vertical","horizontal","Alert","severity","message","media","height","width","backgroundSize","ImageCard","Card","CardActionArea","CardMedia","image","mapDispatchToProps","setEditorState","blogsActions","fetchAllRequest","BlogsNewPage","React","componentDidMount","this","props","render","editorState","updatedAt","Container","maxWidth","className","Typography","gutterBottom","Chip","Divider","Grid","container","spacing","item","xs","onEditorStateChange","connect","blogs"],"mappings":"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","file":"static/js/12.128d4fa7.chunk.js","sourcesContent":["import * as React from 'react'\nimport * as blogsActions from 'store/blogs/actions'\nimport { Blog } from 'store/blogs/types'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport FormControl from '@material-ui/core/FormControl'\nimport TextField from '@material-ui/core/TextField'\nimport Select from '@material-ui/core/Select'\nimport MenuItem from '@material-ui/core/MenuItem'\n\ninterface BlogsSelectProps {\n  data: Blog[]\n  id: number\n  setId: typeof blogsActions.setId\n}\ninterface StatusSelectProps {\n  status: string\n  setStatus: typeof blogsActions.setStatus\n}\ninterface TitleFormProps {\n  title: string\n  setTitle: typeof blogsActions.setTitle\n}\ninterface DescriptionFormProps {\n  description: string\n  setDescription: typeof blogsActions.setDescription\n}\ninterface OgImageFormProps {\n  ogImage: string\n  setOgImage: typeof blogsActions.setOgImage\n}\n\nexport const BlogsSelect: React.FC<BlogsSelectProps> = ({ id, data, setId }) => (\n  <FormControl style={{ minWidth: 120 }}>\n    <InputLabel id=\"blog-set\">Select Blog</InputLabel>\n    <Select labelId=\"blog-set\" id=\"blog-set\" value={id || ''} onChange={e => setId(e.target.value)}>\n      <MenuItem value={0} key={0}>\n        新しく作成\n      </MenuItem>\n      {data && data.map(blog => (\n        <MenuItem value={blog.id} key={blog.id}>\n          {blog.title}\n        </MenuItem>\n      ))}\n    </Select>\n  </FormControl>\n)\nexport const StatusSelect: React.FC<StatusSelectProps> = ({ status, setStatus }) => {\n  const options = [{ status: 'editing' }, { status: 'publish' }, { status: 'hidden' }]\n  return (\n    <FormControl style={{ minWidth: 120 }}>\n      <InputLabel id=\"status-set\">Select Status</InputLabel>\n      <Select labelId=\"status-set\" id=\"status-set\" value={status} onChange={e => setStatus(e.target.value)}>\n        {options.map(option => (\n          <MenuItem value={option.status} key={option.status}>\n            {option.status}\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  )\n}\nexport const TitleForm: React.FC<TitleFormProps> = ({ title, setTitle }) => (\n  <TextField id=\"title-form\" label=\"title\" value={title} onChange={e => setTitle(e.target.value)} />\n)\nexport const DescriptionForm: React.FC<DescriptionFormProps> = ({ description, setDescription }) => (\n  <TextField id=\"description-form\" label=\"description\" value={description} onChange={e => setDescription(e.target.value)} />\n)\nexport const OgImageForm: React.FC<OgImageFormProps> = ({ ogImage, setOgImage }) => (\n  <TextField id=\"og_image_form\" label=\"og_image url\" value={ogImage} onChange={e => setOgImage(e.target.value)} />\n)\n","import * as React from 'react'\nimport * as blogsActions from 'store/blogs/actions'\nimport Button from '@material-ui/core/Button'\n\ninterface FetchButtonProps {\n  fetchRequest: typeof blogsActions.fetchRequest\n}\ninterface SaveButtonProps {\n  saveRequest: typeof blogsActions.saveRequest\n}\n\nexport const FetchButton: React.FC<FetchButtonProps> = ({ fetchRequest }) => (\n  <Button variant=\"contained\" color=\"primary\" onClick={() => fetchRequest()}>\n    Fetch\n  </Button>\n)\n\nexport const SaveButton: React.FC<SaveButtonProps> = ({ saveRequest }) => (\n  <Button variant=\"contained\" color=\"secondary\" onClick={() => saveRequest()}>\n    Save\n  </Button>\n)\n","import React from 'react'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport { Alert } from '@material-ui/lab'\n\ninterface AlertProps {\n  toast: {\n    message?: string;\n    severity?: 'success' | 'info' | 'warning' | 'error' | undefined;\n    isOpen?: boolean\n  }\n}\nconst Toast: React.FC<AlertProps> = ({ toast }) => (\n  <Snackbar open={toast.isOpen} autoHideDuration={1000} anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }} >\n    <Alert severity={toast.severity} >\n      {toast.message}\n    </Alert>\n  </Snackbar>\n)\n\nexport default Toast\n","import React from 'react'\nimport Card from '@material-ui/core/Card'\nimport CardActionArea from '@material-ui/core/CardActionArea'\nimport CardMedia from '@material-ui/core/CardMedia'\n\ninterface ImageCardProps {\n  ogImage: string\n}\nconst style = {\n  media: {\n    height: '40vh',\n    width: 'auto',\n    backgroundSize: 'contain'\n  }\n}\nexport const ImageCard: React.FC<ImageCardProps> = ({ ogImage }) => (\n  <Card>\n    <CardActionArea>\n      <CardMedia image={ogImage || 'image'} title=\"blog image\" style={style.media} />\n    </CardActionArea>\n  </Card>\n)\n","import * as React from 'react'\nimport { AppState } from 'store'\nimport { connect } from 'react-redux'\nimport * as blogsActions from 'store/blogs/actions'\nimport { Blog } from 'store/blogs/types'\nimport { BlogsSelect, OgImageForm, TitleForm, DescriptionForm, StatusSelect } from 'components/blogs/Form'\nimport { FetchButton, SaveButton } from 'components/blogs/Button'\nimport { Editor } from 'react-draft-wysiwyg'\nimport { EditorState } from 'draft-js'\nimport Toast from 'components/layouts/Toast'\nimport { ImageCard } from 'components/blogs/Card'\nimport Container from '@material-ui/core/Container'\nimport Card from '@material-ui/core/Card'\nimport Typography from '@material-ui/core/Typography'\nimport Divider from '@material-ui/core/Divider'\nimport Chip from '@material-ui/core/Chip'\nimport Grid from '@material-ui/core/Grid'\n\ninterface PropsFromState {\n  id: number\n  title: string\n  description: string\n  ogImage: string\n  status: string\n  data: Blog[]\n  editorState: EditorState\n  updatedAt: string\n  toast: { message: string; severity: 'success' | 'info' | 'warning' | 'error' | undefined; isOpen: boolean }\n}\ninterface PropsFromDispatch {\n  setEditorState: typeof blogsActions.setEditorState\n  setTitle: typeof blogsActions.setTitle\n  setDescription: typeof blogsActions.setDescription\n  setOgImage: typeof blogsActions.setOgImage\n  setId: typeof blogsActions.setId\n  setStatus: typeof blogsActions.setStatus\n  fetchRequest: typeof blogsActions.fetchRequest\n  fetchAllRequest: typeof blogsActions.fetchAllRequest\n  saveRequest: typeof blogsActions.saveRequest\n}\ntype AllProps = PropsFromState & PropsFromDispatch\n\nconst mapStateToProps = ({ blogs }: AppState) => ({\n  id: blogs.id,\n  ogImage: blogs.ogImage,\n  title: blogs.title,\n  description: blogs.description,\n  status: blogs.status,\n  data: blogs.data,\n  editorState: blogs.editorState,\n  updatedAt: blogs.updatedAt,\n  toast: blogs.toast\n})\nconst mapDispatchToProps = {\n  setEditorState: blogsActions.setEditorState,\n  setTitle: blogsActions.setTitle,\n  setDescription: blogsActions.setDescription,\n  setOgImage: blogsActions.setOgImage,\n  setId: blogsActions.setId,\n  setStatus: blogsActions.setStatus,\n  fetchRequest: blogsActions.fetchRequest,\n  fetchAllRequest: blogsActions.fetchAllRequest,\n  saveRequest: blogsActions.saveRequest,\n}\n\nclass BlogsNewPage extends React.Component<AllProps> {\n  componentDidMount() {\n    this.props.fetchAllRequest()\n  }\n  render() {\n    const { id, title, description, status, editorState, updatedAt, setEditorState } = this.props\n    return (\n      <>\n        <Toast {...this.props} />\n        <Container maxWidth=\"md\" className=\"my-4 blog min-vh-100\">\n          <Typography variant=\"h4\" gutterBottom>\n            {title}\n          </Typography>\n          <Typography variant=\"subtitle1\" color=\"textSecondary\" gutterBottom>\n            {updatedAt}\n          </Typography>\n          <Chip variant=\"outlined\" label={status} />\n          <Typography variant=\"subtitle1\" gutterBottom>\n            {description}\n          </Typography>\n          <ImageCard {...this.props} />\n          <Divider className=\"my-4\" />\n          <Card className='p-2'>\n            <Grid container spacing={3}>\n              <Grid item xs className=\"align-items-center d-flex\">\n                <div className=\"p-2 m-0\">\n                <Typography variant=\"subtitle1\" gutterBottom>ID: {id || '未選択'}</Typography>\n                </div>\n                <BlogsSelect {...this.props} />\n                <FetchButton {...this.props} />\n              </Grid>\n            </Grid>\n            <Grid container spacing={3}>\n              <Grid item xs>\n                <TitleForm {...this.props} />\n              </Grid>\n              <Grid item xs>\n                <DescriptionForm {...this.props} />\n              </Grid>\n              <Grid item xs>\n                <OgImageForm {...this.props} />\n              </Grid>\n              <Grid item xs>\n                <StatusSelect {...this.props} />\n              </Grid>\n              <Grid item xs>\n                <SaveButton {...this.props} />\n              </Grid>\n            </Grid>\n          </Card>\n          <Editor editorState={editorState} onEditorStateChange={setEditorState} />\n        </Container>\n      </>\n    )\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BlogsNewPage)\n"],"sourceRoot":""}